# ToDo: Language Keys


# Remove unused classes
RTE.classes {
	align-left {
		value = display: none;
	}
	align-center {
		value = display: none;
	}
	align-right {
		value = display: none;
	}
	align-justify {
		value = display: none;
	}
	# Table
	csc-frame-frame1 {
		value = display: none;
	}
	csc-frame-frame2 {
		value = display: none;
	}
	# Textstyle
	important {
		value = display: none;
	}
	name-of-person {
		value = display: none;
	}
	detail {
		value = display: none;
	}
}

# New classes
RTE.classes {

	# Bootrap4 -> Content -> Typography -> Headings
	h1 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h1_label
	}
	h2 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h2_label
	}
	h3 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h3_label
	}
	h4 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h4_label
	}
	h5 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h5_label
	}
	h6 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.h6_label
	}

	# Bootrap4 -> Content -> Typography -> Display headings
	display-1 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.display1_label
	}
	display-2 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.display2_label
	}
	display-3 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.display3_label
	}
	display-4 {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.display4_label
	}

	# Bootrap4 -> Content -> Typography -> Lead
	lead {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.lead_label
	}

	# Bootrap4 -> Components -> Utility classes  -> Text alignment
	text-justify {
		 name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-justify_label
	}
	text-nowrap {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-nowrap_label
	}
	text-xs-left {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xs-left_label
		value = text-align: left;
	}
	text-xs-center {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xs-center_label
		value = text-align: center;
	}
	text-xs-right {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xs-right_label
		value = text-align: right;
	}
	text-sm-left {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-sm-left_label
		value = display: none;
	}
	text-sm-center {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-sm-center_label
		value = display: none;
	}
	text-sm-right {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-sm-right_label
		value = display: none;
	}
	text-md-left {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-md-left_label
		value = display: none;
	}
	text-md-center {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-md-center_label
		value = display: none;
	}
	text-md-right {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-md-right_label
		value = display: none;
	}
	text-lg-left {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-lg-left_label
		value = display: none;
	}
	text-lg-center {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-lg-center_label
		value = display: none;
	}
	text-lg-right {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-lg-right_label
		value = display: none;
	}
	text-xl-left {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xl-left_label
		value = display: none;
	}
	text-xl-center {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xl-center_label
		value = display: none;
	}
	text-xl-right {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-xl-right_label
		value = display: none;
	}

	# Bootrap4 -> Components -> Utility classes  -> Text transform
	text-lowercase {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-lowercase_label
		value = text-transform: lowercase;
	}
	text-uppercase {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-uppercase_label
		value = text-transform: uppercase;
	}
	text-capitalize {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-capitalize_label
		value = text-transform: capitalize;
	}
	text-normal {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-normal_label
		value = text-transform: none;
	}
	# Bootrap4 -> Components -> Utility classes  -> Contextual colors and backgrounds
	text-muted {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-muted_label
		value = color: #818a91;
	}
	text-primary {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-primary_label
		value = color: #0275d8;
	}
	text-secondary {
		# ToDo: gibt es die in Bootstrap?
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-secondary_label
		value = color: orange;
	}
	text-success {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-success_label
		value = color: #5cb85c;
	}
	text-info {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-info_label
		value = color: #5bc0de;
	}
	text-warning {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-warning_label
		value = color: #f0ad4e;
	}
	text-danger {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-danger_label
		value = color: #d9534f;
	}
	text-link-hover-color {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.text-link-hover-color_label
		value = color: #662483;
	}
	bg-primary {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-primary_label
		value = padding: 0.5rem; color: #ffffff; background-color: #0275d8;
	}
	bg-secondary {
		# ToDo: gibt es die in Bootstrap?
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-secondary_label
		value = padding: 0.5rem; color: #ffffff; background-color: orange;
	}
	bg-success {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-success_label
		value = padding: 0.5rem; color: #ffffff; background-color: #5cb85c;
	}
	bg-info {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-info_label
		value = padding: 0.5rem; color: #ffffff; background-color: #5bc0de;
	}
	bg-warning {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-warning_label
		value = padding: 0.5rem; color: #ffffff; background-color: #f0ad4e;
	}
	bg-danger {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-danger_label
		value = padding: 0.5rem; color: #ffffff; background-color: #d9534f;
	}
	bg-inverse {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.bg-inverse_label
		value = padding: 0.5rem; color: #eceeef; background-color: #373a3c;
	}



	# ToDo: Check manual
	btn-default {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.default
	}
	btn-primary {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.primary
	}
	btn-secondary {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.btn-secondary_label
	}
	btn-success {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.success
	}
	btn-info {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.info
	}
	btn-warning {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.warning
	}
	btn-danger {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.danger
	}
	btn-lg {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.large
	}
	btn-sm {
		requires = btn
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Language/locallang.xlf:content.buttons.small
	}



	# ToDo: Chek the following classes!

	small {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.small_label
	}

	### Alignment classes

	### Abbreviations
	initialism {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.abbr-initialism_label
	}
	### Blockquotes
	blockquote-reverse {
		name = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.blockquote-reverse_label
	}


	### Tables
	# @ToDo: Language Files
	table {
		name = Default
	}
	table-inverse {
		requires = table
		name = Default (invert)
	}
	table-striped {
		requires = table
		name = Striped rows
	}
	table-striped-inverse {
		requires = table table-striped table-inverse
		name = Striped rows (invert)
	}
	table-bordered {
		requires = table table-bordered
		name = Bordered table
	}
	table-bordered-inverse {
		requires = table table-bordered table-inverse
		name = Bordered table (invert)
	}
	table-hover {
		requires = table table-hover
		name = Hoverable rows
	}
	table-hover-inverse {
		requires = table table-hover table-inverse
		name = Hoverable rows (invert)
	}
	table-sm {
		requires = table
		name = Small table
	}
	thead-default {
		name = Default
	}
	thead-inverse {
		name = Inverse
	}
	table-reflow {
		requires = table
		name = Reflow
	}

	table-active {
		name = Background active (not for invert table)
	}
	table-success {
		name = Background success (not for invert table)
	}
	table-warning {
		name = Background warning (not for invert table)
	}
	table-danger {
		name = Background danger (not for invert table)
	}
	table-info {
		name = Background info (not for invert table)
	}

	table-bg-primary {
		requires = bg-primary
		name = Background primary
	}
	table-bg-success {
		requires = bg-success
		name = Background success
	}
	table-bg-warning {
		requires = bg-warning
		name = Background warning
	}
	table-bg-danger {
		requires = bg-danger
		name = Background danger
	}
	table-bg-info {
		requires = bg-info
		name = Background info
	}

	# ToDo: Contextual classes bg... will not be displayed good in the rte
}



RTE.default {

# BE Style File
# ToDo: Currently it is not possible to use .scss files for the backend.
	contentCSS {
		default = typo3/sysext/rtehtmlarea/Resources/Public/Css/ContentCss/Default.css
		#theme_bootstrap4 = typo3conf/ext/theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Scss/backend.scss
		theme_bootstrap4 = typo3conf/ext/theme_bootstrap4/Resources/Public/Extensions/Rtehtmlarea/Stylesheets/backend.css
		theme_bootstrap4-additional-label = typo3conf/ext/theme_bootstrap4/Resources/Public/Extensions/Rtehtmlarea/Stylesheets/additional-label.css
	}

	# Show buttons
	## wildcard is *
	## To display some buttons, such as small font, the option "Additional inline elements" hav to be activated in the extension configuration.
	#### ToDo: maybe in a new file
	showButtons := addToList(acronym, user, small, big, deletedtext, showmicrodata, editelement)
	#showButtons = *

	# list allowed classes (must also be defined in the css-file)
	proc.allowedClasses := addToList(h1, h2, h3, h4, h5, h6)
	proc.allowedClasses := addToList(display-1, display-2, display-3, display-4)
	proc.allowedClasses := addToList(lead)
	proc.allowedClasses := addToList(text-nowrap, text-justify)
	proc.allowedClasses := addToList(text-xs-left, text-xs-center, text-xs-right)
	proc.allowedClasses := addToList(text-sm-left, text-sm-center, text-sm-right)
	proc.allowedClasses := addToList(text-md-left, text-md-center, text-md-right)
	proc.allowedClasses := addToList(text-lg-left, text-lg-center, text-lg-right)
	proc.allowedClasses := addToList(text-xl-left, text-xl-center, text-xl-right)
	proc.allowedClasses := addToList(text-lowercase, text-uppercase, text-capitalize, text-normal)
	proc.allowedClasses := addToList(text-muted, text-primary, text-secondary, text-success, text-info, text-warning, text-danger, text-link-hover-color)
	proc.allowedClasses := addToList(bg-primary, bg-success, bg-info, bg-warning, bg-danger, bg-inverse)
	proc.allowedClasses := addToList(small, initialism, blockquote-reverse)
	proc.allowedClasses := addToList(btn, btn-default, btn-primary, btn-secondary, btn-success, btn-info, btn-warning)
	proc.allowedClasses := addToList(btn-danger, btn-lg, btn-sm)
	proc.allowedClasses := addToList(table, table-inverse, table-striped, table-striped-inverse)
	proc.allowedClasses := addToList(table-bordered, table-bordered-inverse)
	proc.allowedClasses := addToList(table-hover, table-hover-inverse, table-sm, table-reflow)
	proc.allowedClasses := addToList(thead-default, thead-inverse)
	proc.allowedClasses := addToList(table-active, table-success, table-warning, table-danger, table-info)
	proc.allowedClasses := addToList(table-bg-primary,table- bg-success, table-bg-warning, table-bg-danger, table-bg-info)

	buttons {
		# A class name to be assigned to the blocks whenever the item is applied to selected text.
		blockstyle.tags {
				# Blockstyle like div or p
				div.allowedClasses := addToList(h1, h2, h3, h4, h5, h6)
				div.allowedClasses := addToList(display-1, display-2, display-3, display-4)
				div.allowedClasses := addToList(lead)
				div.allowedClasses := addToList(text-nowrap, text-justify)
				div.allowedClasses := addToList(text-xs-left, text-xs-center, text-xs-right)
				div.allowedClasses := addToList(text-sm-left, text-sm-center, text-sm-right)
				div.allowedClasses := addToList(text-md-left, text-md-center, text-md-right)
				div.allowedClasses := addToList(text-lg-left, text-lg-center, text-lg-right)
				div.allowedClasses := addToList(text-xl-left, text-xl-center, text-xl-right)
				div.allowedClasses := addToList(text-lowercase, text-uppercase, text-capitalize, text-normal)
				div.allowedClasses := addToList(text-muted, text-primary, text-secondary, text-success, text-info, text-warning, text-danger, text-link-hover-color)
				div.allowedClasses := addToList(bg-primary, bg-success, bg-info, bg-warning, bg-danger, bg-inverse)
				div.allowedClasses := addToList(small)
				# allowed classes for table-tag
				table.allowedClasses := addToList(table, table-inverse, table-striped, table-striped-inverse)
				table.allowedClasses := addToList(table-bordered, table-bordered-inverse, table-sm)
				table.allowedClasses := addToList(table-hover, table-hover-inverse, table-reflow)
				tags.tr.allowedClasses := addToList(table-active, table-success, table-warning, table-danger, table-info)
				tags.tr.allowedClasses := addToList(table-bg-primary, table-bg-success, table-bg-warning, table-bg-danger, table-bg-info)
				tags.td.allowedClasses := addToList(table-active, table-success, table-warning, table-danger, table-info)
				tags.td.allowedClasses := addToList(table-bg-primary, table-bg-success, table-bg-warning, table-bg-danger, table-bg-info)
				tags.thead.allowedClasses := addToList(thead-default, thead-inverse)
				# allowed classes for blockquote-tag
				blockquote.allowedClasses := addToList(blockquote-reverse)
		}
		# for the textstyle
		textstyle.tags {
			# allowed classes for span-tag
			span.allowedClasses := addToList(h1, h2, h3, h4, h5, h6)
			span.allowedClasses := addToList(display-1, display-2, display-3, display-4)
			span.allowedClasses := addToList(lead)
			span.allowedClasses := addToList(text-nowrap)
			span.allowedClasses := addToList(text-lowercase, text-uppercase, text-capitalize, text-normal)
			span.allowedClasses := addToList(text-muted, text-primary, text-secondary, text-success, text-info, text-warning, text-danger, text-link-hover-color)
			span.allowedClasses := addToList(bg-primary, bg-success, bg-info, bg-warning, bg-danger, bg-inverse)
			span.allowedClasses := addToList(small)
			# allowed classes for acronym-tag
			acronym.allowedClasses := addToList(initialism)
		}
		# allowed classes for links (a-tag)
		link.properties.class {
			allowedClasses := addToList(text-muted, text-primary, text-secondary, text-success, text-info, text-warning, text-danger, text-link-hover-color)
			allowedClasses := addToList(btn, btn-default, btn-primary, btn-secondary, btn-success, btn-info, btn-warning)
			allowedClasses := addToList(btn-danger, btn-lg, btn-sm)
		}
		# override: Hide infrequently used block types in the block formatting selector
		formatblock.removeItems >
	}




	# User Elements (displayed with button user)
	userElements {
	10 = Blockquote
	10 {
	10 = Width naming a source
	10.description = Example
	10.mode = wrap
	10.content = <blockquote><p>|</p><footer>Someone famous in <cite title="Source Title">Source Title</cite></footer></blockquote>
	20 = Alternate displays
	20.description = width naming a source
	20.mode = wrap
	20.content = <blockquote class="blockquote-reverse"><p>|</p><footer>Someone famous in <cite title="Source Title">Source Title</cite></footer></blockquote>
	}
	20 = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.category-mark_label
	20 {
	10 = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.name-mark_label
	10.description = LLL:EXT:theme_bootstrap4/Resources/Private/Extensions/Rtehtmlarea/Language/locallang.xlf:rte.description-mark_label
	10.mode = wrap
	10.content = <mark>|</mark>
	}
	90 = Eigene Sondertags
	90 {
	1 = Sondertag
	1.description = Der ausgewählte Text wird umschlossen von <sondertag></sondertag>
	1.mode = wrap
	1.content = <sondertag>|</sondertag>
	}
	}

	# To allow the new tags
	proc.allowTags := addToList(mark, sondertag)
	proc.allowTagsOutside := addToList(mark, sondertag)
	proc.entryHTMLparser_db.allowTags := addToList(mark, sondertag)

}

# Diese Zeile übernimmt die geänderte RTE-Konfiguration für den Editor, wenn dieser im Frontend verwendet wird.
RTE.default.FE < RTE.default

#Info: Eine Abkürzung (acronym) muss erste in der Listenansicht im Beckend eingebunden werden, bevor der Button im RTE sichtbar wird.